#include<stdio.h>
#include<stdlib.h>
typedef long long int ll;

//*********************************************************
struct node
{
ll des;
ll weight;
struct node *next;
};

struct Graph
{
    ll numVertex;
    struct node ** adjList;
};

struct Graph *graph=NULL;
//***********************************************************
struct Graph * getGraph(ll vertex)
{
    struct Graph * graph=(struct Graph*)malloc(sizeof(struct Graph));
    graph->numVertex=vertex;
    graph->adjList=(struct node *)malloc(vertex*sizeof(struct node));
    int i;
    for(i=0;i<graph->numVertex;i++)
        graph->adjList[i]=NULL;

    return graph;
};


void dfs(ll src,ll *visit)
{
if(visit[src]==1)return
visit[src]=1;
printf("%lld ",src);
if(graph->adjList[src]!=NULL)
{
    struct node *temp=graph->adjList[src];
    while(temp!=NULL)
    {
        if(visit[temp->des]==0)
        {
            dfs(temp->des,visit);
        }
        temp=temp->next;
    }
}


}

void dfsUtil(ll src)
{
    printf("\n The DFS of the graph is : \n");

    ll *visit=(ll *)malloc(sizeof(ll)*(graph->numVertex));
    ll i;
    for(i=0;i<graph->numVertex;i++)
        visit[i]=0;

    for(i=0;i<graph->numVertex;i++)
    dfs(i,visit);
    printf("\n---------\n");
}









int addEdge(ll src,ll des)
{
    struct node * temp=(struct node*)malloc(sizeof(struct node));
    temp->des=des;
    temp->weight=0;
    temp->next=NULL;

    if(graph->adjList[src]==NULL)
    {
        graph->adjList[src]=temp;
        return 0;
    }


    struct node * tt=graph->adjList[src];
    while(tt->next!=NULL)
    {
        tt=tt->next;
    }
    tt->next=temp;

    return 0;
}


void printGraph()
{
int i,j;
struct node * temp=NULL;
for(i=0;i<graph->numVertex;i++)
{
    printf("%lld",i);
    if(graph->adjList[i]!=NULL)
    {
        struct node * temp=graph->adjList[i];
        while(temp!=NULL)
        {
            printf("-> %lld",temp->des);
                temp=temp->next;
        }
    }
        printf("\n");

}
}
int main()
{
    ll t;
    scanf("%lld",&t);
    while(t--)
    {
        ll i,x,y,j,k,v,e;
        scanf("%lld %lld",&v,&e);
        graph=getGraph(v);
        for(i=0;i<e;i++)
        {
        scanf("%lld %lld",&x,&y);
            addEdge(x,y);
            addEdge(y,x);

        }

    printGraph(graph);

    }



return 0;
}
/*
1
5 7
0 1
0 4
1 2
1 3
1 4
2 3
3 4

*/
